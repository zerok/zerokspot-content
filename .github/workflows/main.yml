name: CI

on: [push]

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-node@v1.1.2
      with:
        node-version: "12.x"
    - run: "sudo apt-get install -qq --yes python make g++"
    - run: "yarn"
    - run: "yarn run webpack"
    - uses: actions/upload-artifact@v1
      with:
        name: frontend
        path: static

  build-tools:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-go@v1.1.1
      with:
        go-version: "1.13.1"
    - name: Build blogsearch
      run: "cd cmd/blogsearch && GOOS=linux GOARCH=amd64 go build -o ../../blogsearch && cd -"
    - name: Build CLI
      run: "cd cmd/blog && GOOS=linux GOARCH=amd64 go build -o ../../blog && cd -"
    - uses: actions/upload-artifact@v1
      with:
        name: blogcli
        path: blog
    - uses: actions/upload-artifact@v1
      with:
        name: blogsearch
        path: blogsearch

  build-content:
    needs:
      - build-tools
      - build-frontend
    runs-on: ubuntu-latest
    env:
      FEEDBIN_USER: ${{ secrets.FEEDBIN_USER }}
      FEEDBIN_PASSWORD: ${{ secrets.FEEDBIN_PASSWORD }}
    steps:
    - uses: actions/checkout@v1
    - uses: peaceiris/actions-hugo@v2.2.2
      with:
        hugo-version: 0.70.0
        extended: true
    - uses: actions/download-artifact@v1
      with:
        name: frontend
        path: static
    - uses: actions/download-artifact@v1
      with:
        name: blogcli
    - run: hugo
    - run: chmod +x ./blogcli/blog
    - run: ./blogcli/blog build-graph
    - run: ./blogcli/blog blogroll --output data/blogroll.json
    - run: hugo
    - run: tar -cJf public.tar.xz public
    - uses: actions/upload-artifact@v1
      with:
        name: public.tar.xz
        path: public.tar.xz

  index:
    needs:
      - build-tools
      - build-frontend
      - build-content
    runs-on: ubuntu-latest
    env:
      BLOGSEARCH_APP_ID: ${{ secrets.BLOGSEARCH_APP_ID }}
      BLOGSEARCH_APP_KEY: ${{ secrets.BLOGSEARCH_APP_KEY }}
      BLOGSEARCH_BASE_INDEX: ${{ secrets.BLOGSEARCH_BASE_INDEX }}
    steps:
    - uses: actions/checkout@v1
    - uses: actions/download-artifact@v1
      with:
        name: blogsearch
    - uses: actions/download-artifact@v1
      with:
        name: blogcli
    - run: chmod +x ./blogsearch/blogsearch
    - run: chmod +x ./blogcli/blog
    - uses: actions/download-artifact@v1
      with:
        name: public.tar.xz
        path: public.tar.xz
    - run: "tar -xJf public.tar.xz/public.tar.xz && rm -rf public.tar.xz"
    - run: "sudo apt-get install -qq --yes git curl"
    - run: "./blogsearch/blogsearch update-index --updated-objects-path public/.updated-objects.txt"
    - run: "cat public/.updated-objects.txt"
    - run: "./blogsearch/blogsearch build-mapping"
    - run: "./blogcli/blog changes --since-rev $(curl https://zerokspot.com/.gitrev) --url > public/.changes.txt"
    - run: "git rev-parse HEAD > public/.gitrev"
    - uses: actions/upload-artifact@v1
      with:
        name: mapping
        path: ./public/.mapping.json.xz
    - uses: actions/upload-artifact@v1
      with:
        name: updated-objects
        path: ./public/.updated-objects.txt
    - uses: actions/upload-artifact@v1
      with:
        name: changes
        path: ./public/.changes.txt
  deploy:
    needs:
      - index
      - build-content
    runs-on: ubuntu-latest
    env:
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      SSH_KNOWN_HOSTS: ${{ secrets.SSH_KNOWN_HOSTS }}
    steps:
    - uses: actions/checkout@v1
    - uses: actions/download-artifact@v1
      with:
        name: public.tar.xz
        path: public.tar.xz
    - run: tar -xJf public.tar.xz/public.tar.xz
    - uses: actions/download-artifact@v1
      with:
        name: manifest
    - uses: actions/download-artifact@v1
      with:
        name: changes
    - uses: actions/download-artifact@v1
      with:
        name: updated-objects
    - run: "mv changes/.changes.txt public"
    - run: "mv manifest/.manifest.json.xz public"
    - run: "mv updated-objects/.updated-objects.txt public"
    - run: "sudo apt-get install -qq --yes git curl"
    - run: "eval $(ssh-agent -s)"
    - run: echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - run: "mkdir -p ~/.ssh && chmod 0700 ~/.ssh"
    - run: "cd public && rsync -e \"ssh -o StrictHostKeyChecking=no\" -avz * .mapping.json.xz .gitrev www-zerokspot@zerokspot.com:/srv/www/zerokspot.com/www/htdocs/"
    - run: "ssh www-zerokspot@zerokspot.com \"touch /srv/www/zerokspot.com/www/deployed\""

