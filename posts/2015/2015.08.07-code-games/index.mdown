# Code Games

This Tuesday we once again had a
[Python User Group meetup](https://pygraz.org/meetups/2015-08-04) in Graz and I
tried to come up really hard (perhaps a bit too hard, actually) with a short
lightning talk that might still show something new to my fellow local
Pythonistas. Whenever I don't really want to code on anything in particular I
just open CheckIO and work on one of the puzzles there. So perhaps that might be
interesting to someone else too, I thought.

Eventually, I ended up talking a couple of minutes about these sites:

* [CheckIO](http://www.checkio.org/) (obviously)
* [Exercism](http://exercism.io/)
* and [CodeWars](http://www.codewars.com/)

--------------

I enjoy all of them but they are quite different from one another. CheckIO wraps
each puzzles in a nice story and also tries to explain how a certain technique
might be useful in the world outside of the game. Exercism, on the other hand,
tries to improve your coding style and teach you community best practices by
making reviewing other people's submissions a focus point. You also write your
code offline in whatever environment you prefer and just use a CLI tool for
making your submission!  I'm not yet really sure where CodeWars fits in here but
it's quite enjoyable nonetheless ðŸ˜Š

All three have a couple of core aspects in common, though:

* You solve basic problems with just a couple of lines of code.
* You only use the standard library of whatever language the puzzle is targeted
  at. This is a great way to get to know a language and its std-lib better
  without wasting time looking around for some random library. This helps to
  keep you focused!
* *After* solving a puzzle you can get and give feedback. Nothing fancy but
  esp. in Exercism's case this helps improve your future submissions as most
  people will focus on community best-practices.

Exercism is also great if you want to learn a new language as at least the first
couple of challenges are the same in most of the available ones.

One thing that I absolutely love about all three is that they are completely
non-competitive and non-commercial. There *are* other offerings out there that
combine these kinds of challenges with recruitment processes of large
companies. Nice idea, but definitely now what I'm looking for when I just want
to relax and work on a puzzle.

So here are a few more sites I found and want to eventually give a try:

* [Code Abbey](http://www.codeabbey.com/)
* [Python Challenge](http://www.pythonchallenge.com/)
* [Fight Code](http://fightcodegame.com/)

But not before I improve my score on CheckIO and my honour on CodeWars ðŸ˜‰

For completeness' sake here also other sites I came across and listed during my
talk:

* [Dash](https://dash.generalassemb.ly/)
* [Ruby Warrior](https://www.bloc.io/ruby-warrior#/)
* [Programmr](http://www.programmr.com/)
* [Hacker Rank](https://www.hackerrank.com/)
* [Project Euler](https://projecteuler.net/)
